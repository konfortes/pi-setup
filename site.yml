---
- hosts: raspberrypi
  become: true
  vars:
    repo_url: "<REPLACE_WITH_YOUR_GIT_REPO_URL>"  # TODO: Set your repo URL here
    repo_dest: "/home/ubuntu/app"  # Change if you want a different path
    cloudflared_tunnel_name: "<REPLACE_WITH_YOUR_TUNNEL_NAME>"  # Optional, for future use
  tasks:
    - name: Install required apt packages
      apt:
        name:
          - git
          - curl
          - apt-transport-https
          - ca-certificates
          - software-properties-common
        state: present
        update_cache: yes

    - name: Install Docker
      shell: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sh get-docker.sh
      args:
        creates: /usr/bin/docker

    - name: Install docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-linux-aarch64
        dest: /usr/local/bin/docker-compose
        mode: '0755'
      # Check for latest version if needed

    - name: Add user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Install Cloudflared
      shell: |
        wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-arm64.deb
        sudo dpkg -i cloudflared-linux-arm64.deb
      args:
        creates: /usr/bin/cloudflared

    - name: Clone docker-compose repo
      git:
        repo: "{{ repo_url }}"
        dest: "{{ repo_dest }}"
        version: main
      # TODO: Update repo_url above

    - name: Pull docker images
      shell: docker-compose pull
      args:
        chdir: "{{ repo_dest }}"

    - name: Install Ollama (dockerized)
      shell: |
        docker pull ollama/ollama:latest
        docker run -d --name ollama --restart=always -p 11434:11434 ollama/ollama:latest
      args:
        creates: /var/lib/docker/containers

    # --- SYSTEMD SERVICES ---
    # The following tasks create systemd unit files for each service

    - name: Create systemd service for docker-compose
      copy:
        dest: /etc/systemd/system/docker-compose-app.service
        content: |
          [Unit]
          Description=Docker Compose App
          After=docker.service
          Requires=docker.service

          [Service]
          Type=oneshot
          RemainAfterExit=yes
          WorkingDirectory={{ repo_dest }}
          ExecStart=/usr/local/bin/docker-compose up -d
          ExecStop=/usr/local/bin/docker-compose down

          [Install]
          WantedBy=multi-user.target

    - name: Create systemd service for Cloudflared
      copy:
        dest: /etc/systemd/system/cloudflared.service
        content: |
          [Unit]
          Description=Cloudflare Tunnel
          After=network.target

          [Service]
          ExecStart=/usr/bin/cloudflared tunnel run
          Restart=always
          User=ubuntu

          [Install]
          WantedBy=multi-user.target
      # TODO: You must manually create and configure your Cloudflare tunnel and credentials file.

    - name: Create systemd service for Ollama (docker)
      copy:
        dest: /etc/systemd/system/ollama-docker.service
        content: |
          [Unit]
          Description=Ollama Docker Container
          After=docker.service
          Requires=docker.service

          [Service]
          ExecStart=/usr/bin/docker start -a ollama
          ExecStop=/usr/bin/docker stop ollama
          Restart=always
          User=ubuntu

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Enable and start services
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
      loop:
        - docker-compose-app.service
        - cloudflared.service
        - ollama-docker.service 